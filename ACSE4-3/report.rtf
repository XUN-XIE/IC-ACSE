{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgray\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Functionality\
\
We realised forward Euler scheme to update the status of particles 
\f1 with fixed initial time stepping setting.
\f0 \
\
We wrote stencil finding neighbour algorithm, but it cannot work\
\
We wrote predictor corrector scheme to update the status of particles, although it will not lead to leak and bug, it cannot simulate correctly for particles.\
\
\
\
Boundary method\
\
When the fluid particles are going to hit the wall (boundary particles), we applied the push back method to deal with problem of leak. \
\
We firstly compute the updated the position of particles, then we check whether it will hit the wall. If the fluid particles hit the wall, we do not update the position for this update, namely we fix the portion of particles this process of update. Meanwhile, we change the corresponding direction of velocity, and add a lost rate of velocity to decrease the velocity. For example, if the particle is going to hit the left boundary, we do not change the position of particle for this process of update. And we only change the horizontal velocity of particle to opposite direction (namely right), and we multiply the original horizontal velocity with a lost rate.\
\
\
\
Parallel programming \
\
We only applied OpenMP to accelerate the programming.\
\
Time improvement from OpenMP\
\
Serial\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1 \cf2 Forward Euler:\

\f0 \
Dx = 0.5    
\f1 \'a3\'ba
\f0 46.3803 seconds\
\
Dx = 0.2	 :  450.164 seconds\
\
Because the serial code for running condition that dx equals to 0.1 is very slow, so we have not recorded the time\
\
\
OpenMP\
\
Forward Euler :\
\
Dx = 0.5	 : 12.9997 seconds\
\
Dx = 0.2	 : 120.836 seconds\
\
Dx = 0.1 	 : 743.459 seconds\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\
Arbitrary boundary shape\
\
Because we applied push back boundary method, so It is difficult to add arbitrary boundary shape.\
\
\
\
\
}